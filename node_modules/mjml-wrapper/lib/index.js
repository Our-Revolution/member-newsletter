'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mjmlCore = require('mjml-core');

var _merge = require('lodash/merge');

var _merge2 = _interopRequireDefault(_merge);

var _mjmlSection = require('mjml-section');

var _mjmlSection2 = _interopRequireDefault(_mjmlSection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var tagName = 'mj-wrapper';
var parentTag = ['mj-container'];
var defaultMJMLDefinition = (0, _merge2.default)({}, _mjmlSection2.default.defaultMJMLDefinition, {
  inheritedAttributes: ['width']
});
var postRender = function postRender($) {
  $('.mj-wrapper-outlook-open').each(function () {
    var $next = $(this).next();
    var classes = $next.attr('data-class') ? $next.attr('data-class').split(' ').map(function (c) {
      return c + '-outlook';
    }).join(' ') : false;
    $next.removeAttr('data-class');

    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\n      <table role="presentation" border="0" cellpadding="0" cellspacing="0">\n        <tr>\n          <td style="width:' + parseInt($(this).data('width')) + 'px;"' + (classes ? ' class="' + classes + '"' : '') + '>\n      ' + _mjmlCore.helpers.endConditionalTag);
  });

  $('.mj-wrapper-outlook-line').each(function () {
    var $next = $(this).next();
    var classes = $next.attr('data-class') ? $next.attr('data-class').split(' ').map(function (c) {
      return c + '-outlook';
    }).join(' ') : false;
    var width = parseInt($(this).data('width'));
    $next.removeAttr('data-class');

    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\n        </td>\n      </tr>\n      <tr>\n        <td style="width:' + width + 'px;"' + (classes ? ' class="' + classes + '"' : '') + '>\n      ' + _mjmlCore.helpers.endConditionalTag);
  });

  $('.mj-wrapper-outlook-close').each(function () {
    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\n          </td>\n        </tr>\n      </table>\n      ' + _mjmlCore.helpers.endConditionalTag);
  });

  return $;
};

var Wrapper = function (_Section) {
  _inherits(Wrapper, _Section);

  function Wrapper() {
    _classCallCheck(this, Wrapper);

    return _possibleConstructorReturn(this, (Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).apply(this, arguments));
  }

  return Wrapper;
}(_mjmlSection2.default);

Wrapper.tagName = tagName;
Wrapper.parentTag = parentTag;
Wrapper.postRender = postRender;
Wrapper.defaultMJMLDefinition = defaultMJMLDefinition;

exports.default = Wrapper;