'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _mjmlCore = require('mjml-core');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var tagName = 'mj-hero-content';
var parentTag = ['mj-hero'];
var defaultMJMLDefinition = {
  attributes: {
    'width': '100%',
    'padding': '0px',
    'align': 'center',
    'background-color': 'transparent'
  }
};
var endingTag = false;

var baseStyles = {
  table: {
    width: '100%',
    margin: '0px'
  }
};

var postRender = function postRender($) {
  var $mjHeroContent = $('.mj-hero-content');

  $mjHeroContent.each(function () {
    var classes = $(this).attr('data-class') ? $(this).attr('data-class').split(' ').map(function (c) {
      return c + '-outlook';
    }).join(' ') : false;
    var width = $(this).css('width');
    var align = $(this).data('align');
    var backgroundColor = $(this).data('background-color');

    $(this).removeAttr('data-class');

    $(this).before(_mjmlCore.helpers.startConditionalTag + '\n      <table role="presentation"\n             border="0"\n             ' + (classes ? ' class="' + classes + '"' : '') + '\n             cellpadding="0"\n             cellspacing="0"\n             align="' + align + '"\n             width="' + width.replace('px', '') + '"\n             style="width:' + width + ';">\n        <tr>\n          <td style="padding:0;background-color:' + backgroundColor + ';">\n      ' + _mjmlCore.helpers.endConditionalTag).after(_mjmlCore.helpers.startConditionalTag + '\n          </td>\n        </tr>\n      </table>\n      ' + _mjmlCore.helpers.endConditionalTag).removeAttr('data-background-color').removeAttr('data-align');
  });

  if ($mjHeroContent.length > 0) {
    $('head').append('<style type="text/css">\n      @media only screen and (max-width:480px) {\n        .mj-hero-content {\n          width: 100% !important;\n        }\n      }\n    </style>');
  }

  return $;
};

var HeroContent = (0, _mjmlCore.MJMLElement)(_class = function (_Component) {
  _inherits(HeroContent, _Component);

  function HeroContent() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, HeroContent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = HeroContent.__proto__ || Object.getPrototypeOf(HeroContent)).call.apply(_ref, [this].concat(args))), _this), _this.styles = _this.getStyles(), _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(HeroContent, [{
    key: 'getStyles',
    value: function getStyles() {
      var _props = this.props,
          mjAttribute = _props.mjAttribute,
          defaultUnit = _props.defaultUnit,
          getPadding = _props.getPadding;


      return _mjmlCore.helpers.merge({}, baseStyles, {
        div: {
          float: mjAttribute('align'),
          margin: mjAttribute('align') === 'center' ? '0px auto' : '0px',
          width: defaultUnit(mjAttribute('width'), 'px'),
          backgroundColor: mjAttribute('background-color')
        },
        td: {
          paddingTop: getPadding('top'),
          paddingLeft: getPadding('left'),
          paddingRight: getPadding('right'),
          paddingBottom: getPadding('bottom')
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          mjAttribute = _props2.mjAttribute,
          children = _props2.children;

      var divClasses = (0, _classnames2.default)('mj-hero-content', mjAttribute('css-class'));

      return _react2.default.createElement(
        'div',
        {
          className: divClasses,
          'data-class': mjAttribute('css-class'),
          'data-align': mjAttribute('align'),
          'data-background-color': mjAttribute('background-color'),
          style: this.styles.div },
        _react2.default.createElement(
          'table',
          {
            role: 'presentation',
            border: '0',
            cellPadding: '0',
            cellSpacing: '0',
            style: this.styles.table
          },
          _react2.default.createElement(
            'tbody',
            null,
            _react2.default.createElement(
              'tr',
              null,
              _react2.default.createElement(
                'td',
                { style: this.styles.td },
                _react2.default.createElement(
                  'table',
                  { role: 'presentation', style: this.styles.table },
                  _react2.default.createElement(
                    'tbody',
                    null,
                    _react2.default.Children.map(children, function (child) {
                      return _react2.default.cloneElement(child, { columnElement: true });
                    })
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return HeroContent;
}(_react.Component)) || _class;

HeroContent.tagName = tagName;
HeroContent.defaultMJMLDefinition = defaultMJMLDefinition;
HeroContent.endingTag = endingTag;
HeroContent.baseStyles = baseStyles;
HeroContent.postRender = postRender;
HeroContent.parentTag = parentTag;

exports.default = HeroContent;