'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _mjmlCore = require('mjml-core');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _range = require('lodash/range');

var _range2 = _interopRequireDefault(_range);

var _repeat = require('lodash/repeat');

var _repeat2 = _interopRequireDefault(_repeat);

var _min = require('lodash/min');

var _min2 = _interopRequireDefault(_min);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var tagName = 'mj-carousel';
var parentTag = ['mj-column', 'mj-hero-content'];
var defaultMJMLDefinition = {
  attributes: {
    'align': 'center',
    'border-radius': '6px',
    'icon-width': '44px',
    'left-icon': 'http://i.imgur.com/xTh3hln.png',
    'padding': null,
    'padding-top': null,
    'padding-bottom': null,
    'padding-left': null,
    'padding-right': null,
    'right-icon': 'http://i.imgur.com/os7o9kz.png',
    'thumbnails': 'visible',
    'tb-border': '2px solid transparent',
    'tb-border-radius': '6px',
    'tb-hover-border-color': '#fead0d',
    'tb-selected-border-color': '#ccc',
    'tb-width': null
  }
};
var baseStyles = {
  carousel: {
    div: {
      display: 'table',
      width: ' 100%',
      tableLayout: 'fixed',
      textAlign: 'center',
      fontSize: '0'
    },
    table: {
      captionSide: 'top',
      display: 'table-caption',
      tableLayout: 'fixed',
      width: '100%'
    }
  },
  controls: {
    div: {
      display: 'none',
      msoHide: 'all'
    },
    img: {
      display: 'block',
      width: '100%',
      height: 'auto'
    },
    td: {
      display: 'none',
      msoHide: 'all'
    }
  },
  images: {
    div: {
      padding: '20px'
    },
    firstImageDiv: {},
    img: {
      display: 'block',
      width: '600px',
      maxWidth: '100%',
      height: 'auto'
    },
    otherImageDiv: {
      display: 'none',
      msoHide: 'all'
    }
  },
  radio: {
    input: {
      display: 'none',
      msoHide: 'all'
    }
  },
  thumbnails: {
    a: {
      display: 'inline-block',
      overflow: 'hidden'
    },
    img: {
      display: 'block',
      width: '100%',
      height: 'auto'
    }
  }
};
var postRender = function postRender($) {
  var $mjCarousel = $('.mj-carousel');

  if ($mjCarousel.length === 0) {
    return $;
  }

  var length = $mjCarousel.data('length') * 1;

  var carouselCss = '<style type="text/css">\n  .mj-carousel {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n\n  .mj-carousel-icons-cell {\n    display: table-cell !important;\n    width: ' + $mjCarousel.data('icon-width') + ' !important;\n  }\n\n  .mj-carousel-radio,\n  .mj-carousel-next,\n  .mj-carousel-previous {\n    display: none !important;\n  }\n\n  .mj-carousel-thumbnail,\n  .mj-carousel-next,\n  .mj-carousel-previous {\n    touch-action: manipulation;\n  }\n\n  ' + (0, _range2.default)(0, length).map(function (i) {
    return '.mj-carousel-radio:checked ' + (0, _repeat2.default)('+ * ', i) + '+ .mj-carousel-content .mj-carousel-image';
  }).join(',') + ' {\n    display: none !important;\n  }\n\n  ' + (0, _range2.default)(0, length).map(function (i) {
    return '.mj-carousel-radio-' + (i + 1) + ':checked ' + (0, _repeat2.default)('+ * ', length - i - 1) + '+ .mj-carousel-content .mj-carousel-image-' + (i + 1);
  }).join(',') + ' {\n    display: block !important;\n  }\n\n  .mj-carousel-previous-icons,\n  .mj-carousel-next-icons,\n  ' + (0, _range2.default)(0, length).map(function (i) {
    return '.mj-carousel-radio-' + (i + 1) + ':checked ' + (0, _repeat2.default)('+ * ', length - i - 1) + '+ .mj-carousel-content .mj-carousel-next-' + ((i + 1 % length + length) % length + 1);
  }) + ',\n  ' + (0, _range2.default)(0, length).map(function (i) {
    return '.mj-carousel-radio-' + (i + 1) + ':checked ' + (0, _repeat2.default)('+ * ', length - i - 1) + '+ .mj-carousel-content .mj-carousel-previous-' + ((i - 1 % length + length) % length + 1);
  }) + ' {\n    display: block !important;\n  }\n\n  ' + (0, _range2.default)(0, length).map(function (i) {
    return '.mj-carousel-radio-' + (i + 1) + ':checked ' + (0, _repeat2.default)('+ * ', length - i - 1) + '+ .mj-carousel-content .mj-carousel-thumbnail-' + (i + 1);
  }).join(',') + ' {\n    border-color: ' + $mjCarousel.data('selected-border-color') + ' !important;\n  }\n\n  .mj-carousel-image img + div,\n  .mj-carousel-thumbnail img + div {\n    display: none !important;\n  }\n\n  ' + (0, _range2.default)(0, length).map(function (i) {
    return '.mj-carousel-thumbnail:hover ' + (0, _repeat2.default)('+ * ', length - i - 1) + '+ .mj-carousel-main .mj-carousel-image';
  }).join(',') + ' {\n    display: none !important;\n  }\n\n  .mj-carousel-thumbnail:hover {\n    border-color: ' + $mjCarousel.data('hover-border-color') + ' !important;\n  }\n\n  ' + (0, _range2.default)(0, length).map(function (i) {
    return '.mj-carousel-thumbnail-' + (i + 1) + ':hover ' + (0, _repeat2.default)('+ * ', length - i - 1) + '+ .mj-carousel-main .mj-carousel-image-' + (i + 1);
  }).join(',') + ' {\n    display: block !important;\n  }\n  </style>';

  var fallback = '\n  <style type="text/css" id="mj-carousel-fallback">\n    .mj-carousel noinput { display:block !important; }\n    .mj-carousel noinput .mj-carousel-image-1 { display: block !important;  }\n    .mj-carousel noinput .mj-carousel-arrows,\n    .mj-carousel noinput .mj-carousel-thumbnails { display: none !important; }\n\n    [owa] .mj-carousel-thumbnail { display: none !important; }\n\n    @media screen yahoo {\n        .mj-carousel-icons-cell,\n        .mj-carousel-previous-icons,\n        .mj-carousel-next-icons {\n            display: none !important;\n        }\n\n        .mj-carousel-radio-1:checked ' + (0, _repeat2.default)('+ *', length - 1) + '+ .mj-carousel-content .mj-carousel-thumbnail-1 {\n            border-color: transparent;\n        }\n    }\n  </style>';

  $('head').append(carouselCss);
  $('head').append(fallback);

  $('.mj-carousel').before('<!--[if !mso]><!-->');
  $('.mj-carousel').after(_mjmlCore.helpers.endNegationConditionalTag + '\n    <!--[if mso]>\n    ' + $('.mj-carousel-image-1').html() + '\n    ' + _mjmlCore.helpers.endConditionalTag);

  return $;
};

var Carousel = (0, _mjmlCore.MJMLElement)(_class = function (_Component) {
  _inherits(Carousel, _Component);

  function Carousel() {
    _classCallCheck(this, Carousel);

    return _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).apply(this, arguments));
  }

  _createClass(Carousel, [{
    key: 'getStyles',
    value: function getStyles() {
      var mjAttribute = this.props.mjAttribute;


      return _mjmlCore.helpers.merge({}, baseStyles, {
        images: {
          img: {
            borderRadius: mjAttribute('border-radius')
          }
        },
        thumbnails: {
          img: {
            borderRadius: mjAttribute('tb-border-radius')
          },
          a: {
            border: mjAttribute('tb-border'),
            borderRadius: mjAttribute('tb-border-radius'),
            width: this.thumbnailsWidth()
          }
        }
      });
    }
  }, {
    key: 'thumbnailsWidth',
    value: function thumbnailsWidth() {
      var mjAttribute = this.props.mjAttribute;


      return mjAttribute('tb-width') ? mjAttribute('tb-width') : (0, _min2.default)([mjAttribute('parentWidth') / this.images.size, 110]) + 'px';
    }
  }, {
    key: 'generateRadio',
    value: function generateRadio() {
      var _this2 = this;

      return this.images.map(function (_ref, index) {
        var src = _ref.src;

        return _react2.default.createElement('input', {
          key: 'mj-carousel-radio-' + (index + 1),
          className: 'mj-carousel-radio mj-carousel-radio-' + (index + 1),
          defaultChecked: index === 0,
          type: 'radio', name: 'mj-carousel-radio',
          id: 'mj-carousel-radio-' + (index + 1),
          style: _this2.styles.radio.input });
      });
    }
  }, {
    key: 'generateThumbnails',
    value: function generateThumbnails() {
      var _this3 = this;

      var imgWidth = this.thumbnailsWidth();

      return this.images.map(function (_ref2, index) {
        var src = _ref2.src,
            alt = _ref2.alt,
            thumbsSrc = _ref2['thumbnails-src'];

        var imgIndex = index + 1;

        return _react2.default.createElement(
          'a',
          { style: _this3.styles.thumbnails.a, key: 'mj-carousel-thumbnail-' + imgIndex, href: '#' + imgIndex, className: 'mj-carousel-thumbnail mj-carousel-thumbnail-' + imgIndex },
          _react2.default.createElement(
            'label',
            { htmlFor: 'mj-carousel-radio-' + imgIndex },
            _react2.default.createElement('img', { src: thumbsSrc || src, alt: alt, style: _this3.styles.thumbnails.img, width: parseInt(imgWidth) })
          )
        );
      });
    }
  }, {
    key: 'generateControls',
    value: function generateControls(classAffix, icon) {
      var _this4 = this;

      var mjAttribute = this.props.mjAttribute;

      var iconWidth = parseInt(mjAttribute('icon-width'));

      return _react2.default.createElement(
        'td',
        { className: 'mj-carousel-icons-cell', style: this.styles.controls.td },
        _react2.default.createElement(
          'div',
          { className: 'mj-carousel-' + classAffix + '-icons', style: this.styles.controls.div },
          (0, _range2.default)(1, this.images.size + 1).map(function (i) {
            return _react2.default.createElement(
              'label',
              {
                key: 'mj-carousel-radio-' + i,
                htmlFor: 'mj-carousel-radio-' + i,
                className: 'mj-carousel-' + classAffix + ' mj-carousel-' + classAffix + '-' + i },
              _react2.default.createElement('img', { src: icon, alt: '', style: _this4.styles.controls.img, width: iconWidth })
            );
          })
        )
      );
    }
  }, {
    key: 'generateImages',
    value: function generateImages() {
      var _this5 = this;

      return _react2.default.createElement(
        'td',
        null,
        _react2.default.createElement(
          'div',
          { className: 'mj-carousel-images', style: this.styles.images.div },
          this.images.map(function (_ref3, index) {
            var src = _ref3.src,
                alt = _ref3.alt,
                href = _ref3.href,
                rel = _ref3.rel,
                title = _ref3.title;

            var image = _react2.default.createElement('img', { title: title, src: src, alt: alt, style: _this5.styles.images.img, width: '400', border: '0' });

            return _react2.default.createElement(
              'div',
              {
                key: 'mj-carousel-image-' + (index + 1),
                className: 'mj-carousel-image mj-carousel-image-' + (index + 1),
                style: index === 0 ? _this5.styles.images.firstImageDiv : _this5.styles.images.otherImageDiv },
              href ? _react2.default.createElement(
                'a',
                { href: href, rel: rel, target: '_blank' },
                image
              ) : image
            );
          })
        )
      );
    }
  }, {
    key: 'generateCarousel',
    value: function generateCarousel() {
      var mjAttribute = this.props.mjAttribute;


      return _react2.default.createElement(
        'table',
        {
          border: '0',
          cellpPdding: '0',
          cellSpacing: '0',
          width: '100%',
          role: 'presentation',
          style: this.styles.carousel.table,
          className: 'mj-carousel-main' },
        _react2.default.createElement(
          'tbody',
          null,
          _react2.default.createElement(
            'tr',
            null,
            this.generateControls('previous', mjAttribute('left-icon')),
            this.generateImages(),
            this.generateControls('next', mjAttribute('right-icon'))
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          mjAttribute = _props.mjAttribute;


      this.images = children.map(function (img) {
        return img.props.mjml.get('attributes').toObject();
      });
      this.styles = this.getStyles();

      return _react2.default.createElement(
        'div',
        {
          className: 'mj-carousel',
          'data-length': this.images.size,
          'data-icon-width': mjAttribute('icon-width'),
          'data-hover-border-color': mjAttribute('tb-hover-border-color'),
          'data-selected-border-color': mjAttribute('tb-selected-border-color') },
        this.generateRadio(),
        _react2.default.createElement(
          'div',
          { className: 'mj-carousel-content', style: this.styles.carousel.div },
          mjAttribute('thumbnails') == "visible" ? this.generateThumbnails() : null,
          this.generateCarousel()
        )
      );
    }
  }]);

  return Carousel;
}(_react.Component)) || _class;

Carousel.tagName = tagName;
Carousel.parentTag = parentTag;
Carousel.defaultMJMLDefinition = defaultMJMLDefinition;
Carousel.baseStyles = baseStyles;
Carousel.postRender = postRender;

exports.default = Carousel;