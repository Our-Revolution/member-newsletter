'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _mjmlCore = require('mjml-core');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var tagName = 'mj-accordion';
var parentTag = ['mj-column', 'mj-hero-content'];
var defaultMJMLDefinition = {
  attributes: {
    'container-background-color': null,
    'border': '2px solid black',
    'font-family': 'Ubuntu, Helvetica, Arial, sans-serif',
    'icon-align': 'middle',
    'icon-wrapped-url': 'http://i.imgur.com/bIXv1bk.png',
    'icon-wrapped-alt': '+',
    'icon-unwrapped-url': 'http://i.imgur.com/w4uTygT.png',
    'icon-unwrapped-alt': '-',
    'icon-position': 'right',
    'icon-height': '32px',
    'icon-width': '32px',
    'padding-bottom': null,
    'padding-left': null,
    'padding-right': null,
    'padding-top': null,
    'padding': '10px 25px'
  }
};
var baseStyles = {
  table: {
    width: '100%',
    borderCollapse: 'collapse'
  }
};
var postRender = function postRender($) {
  if ($('.mj-accordion').length == 0) {
    return $;
  }

  $('<!--[if !mso | IE]><!-->').insertBefore($('.mj-accordion-ico, .mj-accordion-checkbox'));
  $('<!--<![endif]-->').insertAfter($('.mj-accordion-ico, .mj-accordion-checkbox'));

  $('head').append('\n    <style type="text/css" id="mj-accordion-css">\n      noinput.mj-accordion-checkbox { display:block!important; }\n\n      @media yahoo, only screen and (min-width:0) {\n        .mj-accordion-element { display:block; }\n        input.mj-accordion-checkbox, .mj-accordion-less { display:none!important; }\n        input.mj-accordion-checkbox + * .mj-accordion-title { cursor:pointer; touch-action:manipulation; -webkit-user-select:none; -moz-user-select:none; user-select:none; }\n        input.mj-accordion-checkbox + * .mj-accordion-content { overflow:hidden; display:none; }\n        input.mj-accordion-checkbox + * .mj-accordion-more { display:block!important; }\n        input.mj-accordion-checkbox:checked + * .mj-accordion-content { display:block; }\n        input.mj-accordion-checkbox:checked + * .mj-accordion-more { display:none!important; }\n        input.mj-accordion-checkbox:checked + * .mj-accordion-less { display:block!important; }\n      }\n\n      @goodbye { @gmail }\n    </style>\n  ');

  return $;
};

var Accordion = (0, _mjmlCore.MJMLElement)(_class = function (_Component) {
  _inherits(Accordion, _Component);

  function Accordion() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Accordion);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call.apply(_ref, [this].concat(args))), _this), _this.styles = _this.getStyles(), _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Accordion, [{
    key: 'getStyles',
    value: function getStyles() {
      var mjAttribute = this.props.mjAttribute;


      return _mjmlCore.helpers.merge({}, baseStyles, {
        table: {
          border: mjAttribute('border'),
          borderBottom: 'none',
          fontFamily: mjAttribute('font-family')
        }
      });
    }
  }, {
    key: 'renderAccordion',
    value: function renderAccordion(accordion) {
      var mjAttribute = this.props.mjAttribute;

      var attributes = accordion.props.mjml && accordion.props.mjml.get('attributes');

      if (!attributes) {
        return accordion;
      }

      var computedAttributes = ['icon-wrapped-url', 'icon-wrapped-alt', 'icon-unwrapped-url', 'icon-unwrapped-alt', 'icon-position', 'icon-height', 'icon-width'].reduce(function (res, attr) {
        if (!attributes.get(attr)) {
          res['attributes'][attr] = mjAttribute(attr);
        }

        return res;
      }, {
        attributes: {
          'border': mjAttribute('border')
        }
      });

      return _react2.default.cloneElement(accordion, { mjml: accordion.props.mjml.mergeDeep(computedAttributes) });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var children = this.props.children;


      return _react2.default.createElement(
        'table',
        {
          'data-border': '0',
          cellPadding: '0',
          cellSpacing: '0',
          style: this.styles.table,
          className: 'mj-accordion' },
        _react2.default.createElement(
          'tbody',
          null,
          children.map(function (c) {
            return _this2.renderAccordion(c);
          })
        )
      );
    }
  }]);

  return Accordion;
}(_react.Component)) || _class;

Accordion.tagName = tagName;
Accordion.parentTag = parentTag;
Accordion.defaultMJMLDefinition = defaultMJMLDefinition;
Accordion.baseStyles = baseStyles;
Accordion.postRender = postRender;

exports.default = Accordion;